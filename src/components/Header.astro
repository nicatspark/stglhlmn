---
import HeaderLink from './HeaderLink.astro'
// import { SITE_TITLE } from '../config'
import UiSwitch from './Uiswitch.astro'
import CheckScrollDirection from './CheckScrollDirection'
import Icon from './icon.astro'
---

<script is:inline>
  function togglemenu() {
    const nav = document.querySelector('nav')
    nav.setAttribute('aria-expanded', 'true')
    setTimeout(() => window.addEventListener('click', clickHandler))

    function clickHandler({ target }) {
      if (target.closest('nav')) return
      console.log('here')
      const nav = document.querySelector('nav')
      nav.removeAttribute('aria-expanded')
      window.removeEventListener('click', clickHandler)
    }
  }
</script>
<header>
  <div class='logo'>
    <span class='rotate'><Icon icon='logo' /></span>
    <h1
      ><a href='/'
        ><span class='desktop'>UX/FULLSTACK</span><span class='mobile'>LE</span>
        DEV</a
      ></h1
    ></div
  >
  <button
    id='mobile-menu-btn'
    aria-label='User menu'
    aria-haspopup='true'
    onclick='togglemenu();'><i class='fa fa-bars'></i></button
  >
  <nav aria-label='Main Menu'>
    <ul role='menu' aria-labelledby='user-menu'>
      <li aria-label='home'>
        <HeaderLink href='/'>Home</HeaderLink>
      </li>
      <li aria-label='blog'>
        <HeaderLink href='/blog'>Articles</HeaderLink>
      </li>
      <li aria-label='about'>
        <HeaderLink href='/about'>About</HeaderLink>
      </li>
      <li aria-label='contact'>
        <HeaderLink href='/contact'>Contact</HeaderLink>
      </li>
      <li aria-label='darkmode'>
        <UiSwitch className='theme-toggle' />
      </li>
    </ul>
    <CheckScrollDirection client:load />
  </nav>
  <script>
    const header = document.querySelector('header')
    const scrollEventHandler = (e: any) => {
      if (!header) return
      if (e.detail === 'UP') {
        header.classList.remove('slideout')
      } else {
        header.classList.add('slideout')
      }
    }
    const mouseEventHandler = (e: MouseEvent) => {
      if (!header) return
      const styles = getComputedStyle(document.documentElement)
      const headerHeight = parseInt(styles.getPropertyValue('--header-height'))
      if (e.clientY < headerHeight && header.classList.contains('slideout')) {
        header.classList.remove('slideout')
      }
    }
    document.addEventListener('NEWSCROLLDIRECTION', scrollEventHandler)
    document.addEventListener('mousemove', mouseEventHandler)

    /* handle dark mode */
    let btn = document.querySelector('.theme-toggle')
    const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)')
    const root = document.documentElement

    const currentTheme =
      sessionStorage.getItem('theme') ||
      (prefersDarkScheme.matches ? 'dark' : 'light')
    if (currentTheme === 'dark') {
      root.classList.add('dark-theme')
      root.classList.remove('light-theme')
    } else if (currentTheme === 'light') {
      root.classList.add('light-theme')
      root.classList.remove('dark-theme')
    }
    if (currentTheme === 'dark') {
      const checkbox = btn?.querySelector('input') as HTMLInputElement
      if (checkbox) checkbox.checked = true
    }

    if (btn)
      btn.addEventListener('mousedown', function () {
        root.classList.toggle('light-theme')
        root.classList.toggle('dark-theme')
        if (prefersDarkScheme.matches) {
          var theme = root.classList.contains('light-theme') ? 'light' : 'dark'
        } else {
          var theme = root.classList.contains('dark-theme') ? 'dark' : 'light'
        }
        sessionStorage.setItem('theme', theme)
      })
  </script>
  <script is:inline>
    ;(function highlightCurrentNavItem() {
      const path = document.location.pathname.toLowerCase()
      const current =
        path.split('/')[1] || (path.split('/')[0] === '' ? 'home' : '')
      const currentListItem = document.querySelector(
        `nav li[aria-label="${current}"]`
      )
      console.log('currentListItem', currentListItem)
      currentListItem?.setAttribute('aria-current', 'true')
    })()
    // window.onload = highlightCurrentNavItem
  </script>
</header>

<style lang='scss'>
  header {
    --logo-color: #7ea9b8; // var(--color-dark);
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 80px;
    z-index: 10;
    background-color: var(--bg-header); /* var(--bg-color); */
    display: flex;
    justify-content: space-between;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;
    padding: 0rem 2rem;
    border-bottom: 1px solid hsl(0 0% 100% / 0.2);
    backdrop-filter: blur(5px);
    transition: top 300ms ease-out;

    &.slideout {
      top: calc(var(--header-height) * -1);
      transition: top 800ms ease-in 500ms;
    }

    a:link,
    a:visited,
    a:hover,
    a:active {
      background-color: unset;
      color: var(--color-dark);
    }
    #mobile-menu-btn {
      display: block;
      background-color: transparent;
    }
    nav {
      display: flex;
      flex-flow: column;
      gap: 2rem;
      font-family: var(--sans-serif);
      text-transform: uppercase;
      font-size: 0.9rem;
      letter-spacing: 0.1em;

      position: fixed;
      top: 0;
      right: 0;
      background-color: var(--bg-code);
      padding: 3rem 1rem 1rem;
      width: min(300px, 80%);
      height: 100dvh;
      z-index: 1;
      transition: transform 400ms ease-out;
      border-left: 1px solid hsl(0 0% 0% / 0.2);
      &:not([aria-expanded]) {
        transform: translateX(100%);
      }
      &[aria-expanded] {
        transform: translateX(0%);
      }

      ul {
        list-style: none;
        display: flex;
        flex-flow: column nowrap;
        gap: 2rem;
        padding: 0;
        li {
          padding: 0;
          &[aria-current='true'] {
            font-weight: bold;
            a {
              border-bottom: 1px solid var(--color-dark);
            }
          }
        }
      }
    }
    @media screen and (min-width: 768px) {
      #mobile-menu-btn {
        display: none;
      }

      nav {
        &:not([aria-expanded]) {
          transform: none;
        }
        &[aria-expanded] {
          transform: none;
        }

        position: static;
        background-color: transparent;
        top: unset;
        right: unset;
        padding: 0;
        width: unset;
        border-left: none;
        flex-flow: row nowrap;
        height: unset;
        ul {
          flex-flow: row nowrap;
        }
      }
    }
    .logo {
      display: flex;
      gap: 0.5rem;
      align-items: center;
      h1 {
        white-space: nowrap;
        color: var(--logo-color);
        font-size: 2rem;
        cursor: pointer;
        a {
          color: inherit;
          text-decoration: none;
        }
      }
    }

    &:after {
      content: '';
      position: absolute;
      left: 0;
      bottom: 1px;
      border-bottom: 1px solid hsla(0deg, 0%, 0%, 0.2);
      width: 100%;
    }
  }

  html.dark-theme header {
    --logo-color: hsl(51deg 13% 46%); //hsl(28deg 72% 46%);
    --logo-shadow: 1px 1px 5px hsl(0deg 0% 30%);
  }
</style>
<style is:global>
  .loading .rotate {
    animation: rotate 4s cubic-bezier(0.48, 0.1, 0.52, 1) infinite;
  }

  @keyframes rotate {
    from {
      transform: rotateY(0deg);
    }
    to {
      transform: rotateY(720deg);
    }
  }
</style>

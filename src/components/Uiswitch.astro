---
const { className } = Astro.props
---

<label class={`switch ${className}`}>
  <input type='checkbox' />
  <span class='slider'></span>
</label>
<style lang='scss'>
  .switch {
    --button-width: 3.5em;
    --button-height: 2em;
    --toggle-diameter: 1.5em;
    --button-toggle-offset: calc(
      (var(--button-height) - var(--toggle-diameter)) / 2
    );
    --toggle-shadow-offset: 10px;
    --toggle-wider: 3em;
    --color-bg-slider: rgb(97 152 171 / 75%); // var(--color-calm-dark);
    // --color-green: var(--color-orange-bright);
  }
  html.dark-theme .switch {
    --color-bg-slider: rgb(25 32 25 / 75%);
    // --color-green: var(--bg-header);
  }

  .slider {
    display: inline-block;
    width: var(--button-width);
    height: var(--button-height);
    background-color: var(--color-bg-slider);
    border-radius: calc(var(--button-height) / 2);
    position: relative;
    transition: 0.3s all ease-in-out;
    font-size: 0.5rem;
    border-bottom: 1px solid hsl(0, 0%, 100%, 0.6);
  }

  .slider::after {
    content: url(/assets/svg/moon.svg);
    display: inline-block;
    width: var(--toggle-diameter);
    height: var(--toggle-diameter);
    background-color: hsl(166deg, 8%, 80%);
    border-top: 1px solid hsl(0deg, 0%, 100%);
    border-left: 1px solid hsl(0deg, 0%, 100%);
    border-radius: calc(var(--toggle-diameter) / 2);
    position: absolute;
    top: var(--button-toggle-offset);
    transform: translateX(var(--button-toggle-offset));
    box-shadow: var(--toggle-shadow-offset) 0
      calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
    transition: 0.3s all ease-in-out;
  }

  // .switch input[type='checkbox']:checked + .slider {
  //   background-color: var(--color-green);
  // }

  .switch input[type='checkbox']:checked + .slider::after {
    transform: translateX(
      calc(
        var(--button-width) - var(--toggle-diameter) -
          var(--button-toggle-offset)
      )
    );
    box-shadow: calc(var(--toggle-shadow-offset) * -1) 0
      calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
  }

  .switch input[type='checkbox'] {
    display: none;
  }

  .switch input[type='checkbox']:active + .slider::after {
    width: var(--toggle-wider);
  }

  .switch input[type='checkbox']:checked:active + .slider::after {
    transform: translateX(
      calc(
        var(--button-width) - var(--toggle-wider) - var(--button-toggle-offset)
      )
    );
  }
</style>

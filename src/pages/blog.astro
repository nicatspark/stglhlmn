---
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../config'

// Use Astro.glob() to fetch all posts, and then sort them by date.
const posts = (await Astro.glob('./blog/*.{md,mdx}'))
  .filter((post) => !post.frontmatter.draft)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).valueOf() -
      new Date(a.frontmatter.pubDate).valueOf()
  )

// Snippets
// const snippets = (await Astro.glob('./snippets/*.{md,mdx}'))
//   .filter((a) => a.frontmatter.title.toLowerCase().includes !== 'draft')
//   .filter((post) => !post.frontmatter.draft)
//   .sort(
//     (a, b) => a.frontmatter.title - b.frontmatter.title
//   )

// latest blog post with image
let i = posts.findIndex((post) => !!post?.frontmatter?.heroImage?true:false)
i = (i===-1)? 0: i; 
const latestPost = posts[i].frontmatter
latestPost['url'] = posts[i].url
latestPost['contrastColor'] = latestPost.contrastColor || 'white'
latestPost['contrastColorShadow'] = latestPost.contrastColorShadow || 'black'
---

<!DOCTYPE html>
<html lang='en'>
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style lang='scss'>
      main {
        display: flex;
        flex-flow: column;
        gap: 1rem;
        .latest-article {
          --img-height: 200px;
          --contrast-color: {latestPost?.contrastColor};
          --contrast-color-shadow: {latestPost?.contrastColorShadow};
          display: grid;
          grid-template-areas: 'stack';
          place-items: center;
          border-radius: var(--neu-radius);
          overflow: hidden;
          isolation: isolate;
          max-height: calc(var(--img-height) + 100px);
          transition: box-shadow 1s ease-out;
          box-shadow: 0px 0px 0px hsl(0deg 0% 0% / 20%);
          &:hover {
            box-shadow: 3px 3px 3px hsl(0deg 0% 0% / 20%);
          }
          & > * {
            grid-area: stack;
            position: relative;
            top: calc((var(--img-height)/2) * -1);
          }
          img {
            clip-path: inset(
              min(calc(50% - var(--img-height)), 100%) 0%
                min(calc(50% - var(--img-height)), 100%) 0% round 1rem
            );
          }
          h3 {
            position: relative;
            color: var(--contrast-color, white);
            text-shadow: 0px 0px 4px var(--contrast-color-shadow, black);
            font-size: 2rem;
            z-index: 1;
            pointer-events: none;
            text-align: center;
            max-width: 75%;
            animation: cyberpunk-glitch 7s step-end infinite,
              skew-glitch 7s step-end infinite;
            &:after {
              content: 'FEATURED ARTICLE';
              position: absolute;
              top: 1em;
              left: 0;
              font-size: 0.7rem;
              letter-spacing: 0.5em;
            }
          }
        }
        @media screen and (max-width: 960px) {
          .latest-article {
            display: none;
          }
        }
        .collections {
          display: flex;
          flex-direction: column;
          gap: 3rem;
          @media screen and (min-width: 768px) {
            flex-direction: row;
          }
        }
      }
      section {
        padding: 1rem;
        width: 100%;
        max-height: 35vh;
        overflow-y: auto;
        @media screen and (min-width: 768px) {
          max-height: unset;
          overflow-y: initial;
        }
        h3 {
          position: sticky;
          top: -30px;
          background-color: var(--bg-color);
          @media screen and (min-width: 768px) {
            position: initial;
            top: unset;
            background-color: transparent;
          }
        }
      }
      ul {
        list-style-type: none;
        padding: unset;
        padding-bottom: 3rem;
        font-family: var(--sans-serif);
      }
      ul li {
        display: flex;
        padding: 0;
      }
      ul li :is(a:link, a:hover, a:active, a:visited) {
        background-color: transparent;
      }
      ul li time {
        flex: 0 0 11ch;
        color: #979797;
        font-size: 0.6em;
        text-transform: uppercase;
        margin-top: 0.6em;
      }
      /* ul li a:visited {
				color: #8e32dc;
			} */
    </style>
  </head>
  <body>
    <Header />
    <main>
      <div class='latest-article' style={`--contrast-color: ${latestPost?.contrastColor};--contrast-color-shadow: ${latestPost?.contrastColorShadow};`}
        ><a aria-label="featured article" href={latestPost?.url}
          ><img src={latestPost?.heroImage} alt={latestPost?.title} /></a
        ><h3 class='title'>{latestPost?.title}</h3></div
      >
      <div class='collections'>
        <section class='neu-box' aria-label="Articles">
          <h3>Articles</h3>
          <ul>
            {
              posts.map((post) => (
                <li>
                  <time datetime={post.frontmatter.pubDate}>
                    {new Date(post.frontmatter.pubDate).toLocaleDateString(
                      'en-us',
                      {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric',
                      }
                    )}
                  </time>
                  <a href={post.url}>{post.frontmatter.title}</a>
                </li>
              ))
            }
          </ul>
        </section>
      </div>
    </main>
    <Footer />
  </body></html
>
